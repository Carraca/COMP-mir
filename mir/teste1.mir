my_awesome_program:

make_node:
	begin
		receive p ( val )
		receive n ( val )
		q := call func ()
		r := call func ()
		$q.next := 0
		$q.value := n
		$p.next := q
		return q
	end

insert_node:
	begin
		receive n ( val )
		receive l ( val )
		t1 := $l.value
		if n <= t1 goto L1
		t2 := $l.next
		if t2 != 0 goto L2
		if t1 = 0 trap 2
		call make_node (l, type1 ; n, int)
		return
L2:		t4 := $l.next
		call insert_node (n, int; t4, type1)
		return
L1:		return
	end

func:
	begin
		t1 := 2
	end
	
main:
	begin
		t1 := 1
		t2 := t1 + 1
	end
